/*
 * App URI: customizing/modifyCustomizing
 * Source Location: customizing/modifyCustomizing.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("customizing/modifyCustomizing", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * modifyCustomizing.js
			 * Created at 2022. 6. 6. 오전 2:50:20.
			 *
			 * @author PSE
			 ************************************************/
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				
				
			}
			
			
			/*
			 * "+" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				var grid_developer = app.lookup("grid_developer");
				var insertRow = grid_developer.insertRow(grid_developer.getRowCount(), true);
				// + 버튼 클릭시 그리드 행 추가
				
			}
			
			
			/*
			 * "-" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var gridDeveloper = app.lookup("grid_developer");
				gridDeveloper.showDeletedRow = false;
				
				gridDeveloper.deleteRow(gridDeveloper.getViewingEndRowIndex());
				// 제일 마지막 행 삭제
				
			}
			
			
			/*
			 * "수정" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
			}
			
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick4(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var button = e.control;
				var grid_developer = app.lookup("grid_developer");
			
				var insertRow = grid_developer.insertRow(grid_developer.getRowCount(), true);
				// + 버튼 클릭시 그리드 행 추가
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("product_customizing");
			dataSet_1.parseData({
				"columns": [
					{"name": "customizing_id"},
					{"name": "customizing_version"},
					{"name": "customized_function"},
					{"name": "department"},
					{
						"name": "employees_number",
						"dataType": "number"
					},
					{"name": "employees_name"},
					{
						"name": "start_dates",
						"dataType": "string"
					},
					{"name": "end_date"}
				],
				"rows": [
					{"customizing_version": "1.0.0.0", "customized_function": "기능1sdfsdfsadfasdfasdf111111", "department": "sw1", "employees_number": "1", "employees_name": "dd", "start_dates": "2019-10-28", "end_date": "2020-01-22"},
					{"customizing_version": "1.0.1.0", "customized_function": "기능3", "department": "sw2", "employees_number": "3", "employees_name": "rr", "start_dates": "2020-05-22", "end_date": "2020-07-16"},
					{"customizing_version": "1.0.1.0", "customized_function": "기능2", "department": "sw2", "employees_number": "2", "employees_name": "ff", "start_dates": "2020-05-30", "end_date": "2020-09-11"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("product");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "product_id",
						"dataType": "number"
					},
					{"name": "product_name"}
				]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 770px) and (max-width: 1023px)", "new-screen2");
			app.supportMedia("all and (min-width: 740px) and (max-width: 769px)", "new-screen");
			app.supportMedia("all and (min-width: 500px) and (max-width: 739px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "커스터마이징 이력";
				output_1.style.css({
					"font-weight" : "bold",
					"vertical-align" : "middle",
					"font-size" : "14pt",
					"text-align" : "left"
				});
				container.addChild(output_1, {
					"top": "30px",
					"left": "20px",
					"width": "201px",
					"height": "41px"
				});
				var group_2 = new cpr.controls.Container();
				// Layout
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.topMargin = "0px";
				formLayout_1.rightMargin = "0px";
				formLayout_1.bottomMargin = "0px";
				formLayout_1.leftMargin = "0px";
				formLayout_1.horizontalSpacing = "0px";
				formLayout_1.verticalSpacing = "0px";
				formLayout_1.setColumns(["100px", "180px"]);
				formLayout_1.setRows(["30px"]);
				group_2.setLayout(formLayout_1);
				(function(container){
					var output_2 = new cpr.controls.Output();
					output_2.value = "제품명";
					output_2.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#b4b4b4",
						"border-right-width" : "1px",
						"border-left-color" : "#b4b4b4",
						"border-right-color" : "#b4b4b4",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#b4b4b4",
						"border-bottom-style" : "solid",
						"text-align" : "center"
					});
					container.addChild(output_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_3 = new cpr.controls.Output("productName");
					output_3.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#b4b4b4",
						"border-right-width" : "1px",
						"border-bottom-width" : "1px",
						"border-top-color" : "#b4b4b4",
						"border-bottom-style" : "solid",
						"border-right-color" : "#b4b4b4",
						"border-top-style" : "solid",
						"text-align" : "center"
					});
					output_3.bind("value").toDataMap(app.lookup("product"), "product_name");
					container.addChild(output_3, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "93px",
					"left": "20px",
					"width": "284px",
					"height": "38px"
				});
				var group_3 = new cpr.controls.Container();
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "0px";
				formLayout_2.rightMargin = "0px";
				formLayout_2.bottomMargin = "0px";
				formLayout_2.leftMargin = "0px";
				formLayout_2.horizontalSpacing = "0px";
				formLayout_2.verticalSpacing = "10px";
				formLayout_2.setColumns(["1fr", "34px", "34px"]);
				formLayout_2.setRows(["25px", "1fr"]);
				group_3.setLayout(formLayout_2);
				(function(container){
					var grid_1 = new cpr.controls.Grid("grid_developer");
					grid_1.init({
						"dataSet": app.lookup("product_customizing"),
						"columns": [
							{"width": "25px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [
								{"height": "27px"},
								{"height": "27px"}
							],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 2, "colSpan": 1},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.columnType = "checkbox";
										cell.style.css({
											"background-color" : "#eaf0ea"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1, "rowSpan": 2, "colSpan": 1},
									"configurator": function(cell){
										cell.targetColumnName = "customizing_version";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "커스터마이징 버전";
										cell.style.css({
											"background-color" : "#eaf0ea"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2, "rowSpan": 2, "colSpan": 1},
									"configurator": function(cell){
										cell.targetColumnName = "customized_function";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "기능";
										cell.style.css({
											"background-color" : "#eaf0ea"
										});
									}
								},
								{
									"constraint": {"rowIndex": 1, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "department";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "부서명";
										cell.style.css({
											"background-color" : "#eaf0ea"
										});
									}
								},
								{
									"constraint": {"rowIndex": 1, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "employees_number";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "사원번호";
										cell.style.css({
											"background-color" : "#eaf0ea"
										});
									}
								},
								{
									"constraint": {"rowIndex": 1, "colIndex": 5},
									"configurator": function(cell){
										cell.targetColumnName = "employees_name";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "성명";
										cell.style.css({
											"background-color" : "#eaf0ea"
										});
									}
								},
								{
									"constraint": {"rowIndex": 1, "colIndex": 6},
									"configurator": function(cell){
										cell.targetColumnName = "start_dates";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "시작일";
										cell.style.css({
											"background-color" : "#eaf0ea"
										});
									}
								},
								{
									"constraint": {"rowIndex": 1, "colIndex": 7},
									"configurator": function(cell){
										cell.targetColumnName = "end_date";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "종료일";
										cell.style.css({
											"background-color" : "#eaf0ea"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3, "rowSpan": 1, "colSpan": 5},
									"configurator": function(cell){
										cell.text = "담당 개발자";
										cell.style.css({
											"background-color" : "#eaf0ea"
										});
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "27px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "customizing_version";
										cell.control = (function(){
											var inputBox_1 = new cpr.controls.InputBox("ipb2");
											inputBox_1.bind("value").toDataColumn("customizing_version");
											return inputBox_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "customized_function";
										cell.control = (function(){
											var inputBox_2 = new cpr.controls.InputBox("ipb3");
											inputBox_2.bind("value").toDataColumn("customized_function");
											return inputBox_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "department";
										cell.control = (function(){
											var inputBox_3 = new cpr.controls.InputBox("ipb4");
											inputBox_3.bind("value").toDataColumn("department");
											return inputBox_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "employees_number";
										cell.control = (function(){
											var maskEditor_1 = new cpr.controls.MaskEditor("mse1");
											maskEditor_1.bind("value").toDataColumn("employees_number");
											return maskEditor_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "employees_name";
										cell.control = (function(){
											var inputBox_4 = new cpr.controls.InputBox("ipb5");
											inputBox_4.bind("value").toDataColumn("employees_name");
											return inputBox_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "start_dates";
										cell.control = (function(){
											var dateInput_1 = new cpr.controls.DateInput("dti1");
											dateInput_1.bind("value").toDataColumn("start_dates");
											return dateInput_1;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "end_date";
										cell.control = (function(){
											var dateInput_2 = new cpr.controls.DateInput("dti2");
											dateInput_2.bind("value").toDataColumn("end_date");
											return dateInput_2;
										})();
									}
								}
							]
						},
						"rowGroup": [{
							"groupCondition": "customizing_version",
							"gheader": {
								"rows": [{"height": "24px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 1, "colSpan": 7},
										"configurator": function(cell){
											cell.expr = "\"[버전]    \" + customizing_version";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.expr = "";
											cell.control = (function(){
												var button_1 = new cpr.controls.Button();
												button_1.value = "+";
												if(typeof onButtonClick4 == "function") {
													button_1.addEventListener("click", onButtonClick4);
												}
												return button_1;
											})();
										}
									}
								]
							}
						}]
					});
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1,
						"colSpan": 3,
						"rowSpan": 1
					});
					var button_2 = new cpr.controls.Button();
					button_2.value = "+";
					button_2.style.css({
						"background-color" : "#eaf0ea",
						"border-bottom-color" : "#c2c2c2",
						"border-left-color" : "#c2c2c2",
						"border-top-color" : "#c2c2c2",
						"border-right-color" : "#c2c2c2",
						"background-image" : "none"
					});
					if(typeof onButtonClick == "function") {
						button_2.addEventListener("click", onButtonClick);
					}
					container.addChild(button_2, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var button_3 = new cpr.controls.Button();
					button_3.value = "-";
					button_3.style.css({
						"background-color" : "#eaf0ea",
						"border-bottom-color" : "#c2c2c2",
						"border-left-color" : "#c2c2c2",
						"border-top-color" : "#c2c2c2",
						"border-right-color" : "#c2c2c2",
						"background-image" : "none"
					});
					if(typeof onButtonClick2 == "function") {
						button_3.addEventListener("click", onButtonClick2);
					}
					container.addChild(button_3, {
						"colIndex": 2,
						"rowIndex": 0
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "141px",
					"left": "20px",
					"width": "735px",
					"height": "493px"
				});
				var button_4 = new cpr.controls.Button();
				button_4.value = "수정";
				button_4.style.css({
					"background-color" : "#DAF2DA",
					"border-right-style" : "none",
					"border-radius" : "10px",
					"border-left-style" : "none",
					"border-bottom-style" : "none",
					"background-image" : "none",
					"border-top-style" : "none"
				});
				if(typeof onButtonClick3 == "function") {
					button_4.addEventListener("click", onButtonClick3);
				}
				container.addChild(button_4, {
					"top": "655px",
					"left": "675px",
					"width": "80px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "765px",
				"height": "700px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "modifyCustomizing";
	cpr.core.Platform.INSTANCE.register(app);
})();
