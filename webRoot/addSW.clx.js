/*
 * App URI: addSW
 * Source Location: addSW.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("addSW", {
		onPrepare: function(loader){
			loader.addCSS("theme/css/addProduct_style.css");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * addSW.js
			 * Created at 2022. 5. 29. 오전 1:35:06.
			 *
			 * @author PSE
			 ************************************************/
			
			/*
			 * 담당 개발자 "+" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				var grid_developer = app.lookup("grid_developer");
				var insertRow = grid_developer.insertRow(1, true);
				// + 버튼 클릭시 그리드 행 추가
			}
			
			
			/*
			 * "등록" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				var product_image = app.lookup("product_image");
				
				var addSW = app.lookup("addSW");
				// 업로드한 파일 정보 서브미션에 저장
				if (product_image.file != null){
					addSW.addFileParameter("SWimage", product_image.file);
					console.log("출입통제기 이미지 파일명 :" + product_image.file);
					console.log("출입통제기 파일 타입" + product_image.file.type);
				}
				
				var product = app.lookup("product");
				
				product.setValue("product_type", "SW");
				
				var product_sw = app.lookup("product_sw");
				
				// 선택한 DB 값의 행 인덱스 값들 가져오기
				var selectDBindices = app.lookup("grid_DB").getCheckRowIndices();
				console.log("selectDBindices : " + selectDBindices);
				
				var i;
				var selectDBVaules = 0;
				var dbDateSet = app.lookup("available_dbList");
				for(i = 0; i < selectDBindices.length; i++) {
					// 가져온 인덱스 값으로 선택한 DB의 설정된 2진수 값을 모두 더한다. (available_dbList 데이터셋 확인)
					selectDBVaules += dbDateSet.getValue(selectDBindices[i], "db_binary_numbers");
				}
				console.log("selectDBVaules : " + selectDBVaules);
				
				// 더한 2진수 값을 10진수로 변환, prodect_sw 데이터 맵에 넣기
				var decimalDBvalue = parseInt(selectDBVaules, 2);
				console.log("decimalDBvalue : " + decimalDBvalue);
				
				product_sw.setValue("available_db", decimalDBvalue);
				
				// 선택한 OS 값들 가져오기
				var selectOSvalues = app.lookup("checkBox_os").values;
				console.log("selectOSvalues : " + selectOSvalues);
				
				var osValue = 0;
				for(i = 0; i < selectOSvalues.length; i++){
					// 선택한 os의 설정된 2진수 값을 모두 더한다. (available_osList 데이터셋 확인)
					osValue += Number(selectOSvalues[i]);
				}
				
				console.log("osValue : " + osValue);
				// 더한 2진수 값을 10진수로 변환, prodect_sw 데이터 맵에 넣기
				var decimalOSvalue = parseInt(osValue, 2);
				console.log("decimalOSvalue : " + decimalOSvalue);
				
				product_sw.setValue("available_os", decimalOSvalue);
				
				app.lookup("addSW").send();
				console.log("addSW 서브미션 실행");
				
			}
			
			/*
			 * addSW 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onAddSWSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var addSW = e.control;
				
				var resultCode = app.lookup("result").getValue("resultCode");
				console.log(resultCode);
				app.setAppProperty("resultCode", resultCode);
				
				app.getRootAppInstance().dialogManager.getDialogByName("addProduct").close();
				
				/*
				if(resultCode == 1){
					app.getRootAppInstance().dialogManager.getDialogByName("addProduct").close();
				}else {
					alert("상품 등록 실패");
				}
				*/
				
				//app.getRootAppInstance().dialogManager.getDialogByName("addProduct").close();
				//app.getRootAppInstance()는 최상위 앱 호출
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("available_dbList");
			dataSet_1.parseData({
				"columns": [
					{"name": "available_db"},
					{
						"name": "db_binary_numbers",
						"dataType": "number"
					}
				],
				"rows": [
					{"available_db": "Oracle", "db_binary_numbers": "1"},
					{"available_db": "MySQL", "db_binary_numbers": "10"},
					{"available_db": "MS Server", "db_binary_numbers": "100"},
					{"available_db": "MariaDB", "db_binary_numbers": "1000"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("developerList");
			dataSet_2.parseData({
				"columns" : [
					{"name": "department"},
					{"name": "employees_number"},
					{"name": "employees_name"},
					{"name": "start_date"},
					{"name": "end_date"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("available_osList");
			dataSet_3.parseData({
				"columns": [
					{"name": "available_os"},
					{
						"name": "os_binary_numbers",
						"dataType": "number"
					}
				],
				"rows": [
					{"available_os": "Window", "os_binary_numbers": "1"},
					{"available_os": "Linux", "os_binary_numbers": "10"},
					{"available_os": "Unix", "os_binary_numbers": "100"},
					{"available_os": "Mac", "os_binary_numbers": "1000"}
				]
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("product");
			dataMap_1.parseData({
				"columns" : [
					{"name": "product_type"},
					{"name": "product_name"},
					{"name": "product_version"},
					{"name": "explanation"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("product_sw");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "simultaneous_connection",
						"dataType": "number"
					},
					{
						"name": "available_db",
						"dataType": "number"
					},
					{
						"name": "available_os",
						"dataType": "number"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("result");
			dataMap_3.parseData({
				"columns" : [{"name": "resultCode"}]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("addSW");
			submission_1.action = "/productMangement/addSW";
			submission_1.mediaType = "multipart/form-data";
			submission_1.addRequestData(dataMap_1);
			submission_1.addRequestData(dataMap_2);
			submission_1.addRequestData(dataSet_2);
			submission_1.addResponseData(dataMap_3, false);
			if(typeof onAddSWSubmitDone == "function") {
				submission_1.addEventListener("submit-done", onAddSWSubmitDone);
			}
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 707px) and (max-width: 1023px)", "dialog");
			app.supportMedia("all and (min-width: 707px) and (max-width: 706px)", "layout");
			app.supportMedia("all and (min-width: 500px) and (max-width: 706px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "15px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["227px", "238px", "209px"]);
			formLayout_1.setRows(["25px"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container();
				// Layout
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_2);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "제품명";
					output_1.style.css({
						"vertical-align" : "middle",
						"text-align" : "center"
					});
					container.addChild(output_1, {
						"top": "0px",
						"left": "7px",
						"width": "73px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("input_productName");
					inputBox_1.bind("value").toDataMap(app.lookup("product"), "product_name");
					container.addChild(inputBox_1, {
						"top": "0px",
						"left": "79px",
						"width": "159px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "704px",
				"height": "27px"
			});
			
			var fileInput_1 = new cpr.controls.FileInput("product_image");
			fileInput_1.showClearButton = true;
			fileInput_1.placeholder = "제품 이미지 선택";
			fileInput_1.acceptFile = "image/*";
			container.addChild(fileInput_1, {
				"top": "0px",
				"left": "1px",
				"width": "227px",
				"height": "25px"
			});
			
			var output_2 = new cpr.controls.Output();
			output_2.value = "버전";
			output_2.style.css({
				"vertical-align" : "middle",
				"text-align" : "center"
			});
			container.addChild(output_2, {
				"top": "0px",
				"left": "505px",
				"width": "62px",
				"height": "25px"
			});
			
			var inputBox_2 = new cpr.controls.InputBox("ipb2");
			inputBox_2.bind("value").toDataMap(app.lookup("product"), "product_version");
			container.addChild(inputBox_2, {
				"top": "0px",
				"left": "566px",
				"width": "131px",
				"height": "25px"
			});
			
			var group_3 = new cpr.controls.Container();
			// Layout
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.topMargin = "0px";
			formLayout_2.rightMargin = "0px";
			formLayout_2.bottomMargin = "0px";
			formLayout_2.leftMargin = "0px";
			formLayout_2.horizontalSpacing = "0px";
			formLayout_2.verticalSpacing = "0px";
			formLayout_2.setColumns(["155px", "200px"]);
			formLayout_2.setRows(["25px"]);
			group_3.setLayout(formLayout_2);
			(function(container){
				var output_3 = new cpr.controls.Output();
				output_3.value = "동시 접속 단말기 수";
				output_3.style.css({
					"text-align" : "center"
				});
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
				numberEditor_1.style.css({
					"text-align" : "right",
					"padding-right" : "5px"
				});
				numberEditor_1.bind("value").toDataMap(app.lookup("product_sw"), "simultaneous_connection");
				container.addChild(numberEditor_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "60px",
				"left": "0px",
				"width": "363px",
				"height": "28px"
			});
			
			var group_4 = new cpr.controls.Container();
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			group_4.setLayout(verticalLayout_1);
			(function(container){
				var output_4 = new cpr.controls.Output();
				output_4.value = "지원 OS";
				output_4.style.css({
					"padding-left" : "10px"
				});
				container.addChild(output_4, {
					"width": "100px",
					"height": "27px"
				});
				var checkBoxGroup_1 = new cpr.controls.CheckBoxGroup("checkBox_os");
				checkBoxGroup_1.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#b8b8b8",
					"border-right-width" : "1px",
					"border-left-color" : "#b8b8b8",
					"vertical-align" : "middle",
					"border-right-color" : "#b8b8b8",
					"border-left-width" : "1px",
					"border-top-style" : "solid",
					"border-left-style" : "solid",
					"border-bottom-width" : "1px",
					"border-top-color" : "#b8b8b8",
					"border-bottom-style" : "solid",
					"text-align" : "center"
				});
				(function(checkBoxGroup_1){
					checkBoxGroup_1.setItemSet(app.lookup("available_osList"), {
						"label": "available_os",
						"value": "os_binary_numbers"
					})
				})(checkBoxGroup_1);
				container.addChild(checkBoxGroup_1, {
					"width": "200px",
					"height": "40px"
				});
			})(group_4);
			container.addChild(group_4, {
				"top": "117px",
				"left": "1px",
				"width": "422px",
				"height": "80px"
			});
			
			var group_5 = new cpr.controls.Container();
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_5.setLayout(verticalLayout_2);
			(function(container){
				var output_5 = new cpr.controls.Output();
				output_5.value = "사용가능 DB";
				container.addChild(output_5, {
					"width": "100px",
					"height": "27px"
				});
				var grid_1 = new cpr.controls.Grid("grid_DB");
				grid_1.readOnly = true;
				grid_1.init({
					"dataSet": app.lookup("available_dbList"),
					"columns": [
						{"width": "25px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.columnType = "checkbox";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.targetColumnName = "available_db";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "DB 종류";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "available_db";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"autoSize": "height",
					"width": "275px",
					"height": "127px"
				});
			})(group_5);
			container.addChild(group_5, {
				"top": "48px",
				"left": "455px",
				"width": "240px",
				"height": "164px"
			});
			
			var group_6 = new cpr.controls.Container();
			// Layout
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			group_6.setLayout(verticalLayout_3);
			(function(container){
				var output_6 = new cpr.controls.Output();
				output_6.value = "설명";
				output_6.style.css({
					"padding-left" : "10px"
				});
				container.addChild(output_6, {
					"width": "100px",
					"height": "25px"
				});
				var textArea_1 = new cpr.controls.TextArea("txa1");
				textArea_1.bind("value").toDataMap(app.lookup("product"), "explanation");
				container.addChild(textArea_1, {
					"width": "100px",
					"height": "176px"
				});
			})(group_6);
			container.addChild(group_6, {
				"top": "232px",
				"left": "0px",
				"width": "704px",
				"height": "221px"
			});
			
			var group_7 = new cpr.controls.Container();
			// Layout
			var formLayout_3 = new cpr.controls.layouts.FormLayout();
			formLayout_3.topMargin = "0px";
			formLayout_3.rightMargin = "0px";
			formLayout_3.bottomMargin = "0px";
			formLayout_3.leftMargin = "0px";
			formLayout_3.horizontalSpacing = "0px";
			formLayout_3.verticalSpacing = "8px";
			formLayout_3.setColumns(["16fr", "34px"]);
			formLayout_3.setRows(["25px", "1fr"]);
			group_7.setLayout(formLayout_3);
			(function(container){
				var output_7 = new cpr.controls.Output();
				output_7.value = "담당 개발자";
				output_7.style.css({
					"padding-left" : "10px"
				});
				container.addChild(output_7, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var grid_2 = new cpr.controls.Grid("grid_developer");
				grid_2.init({
					"dataSet": app.lookup("developerList"),
					"columns": [
						{"width": "33px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [
							{"height": "25px"},
							{"height": "25px"}
						],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 2, "colSpan": 1},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "번호";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1, "rowSpan": 2, "colSpan": 1},
								"configurator": function(cell){
									cell.targetColumnName = "department";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "부서명";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2, "rowSpan": 2, "colSpan": 1},
								"configurator": function(cell){
									cell.targetColumnName = "employees_number";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "사원번호";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3, "rowSpan": 2, "colSpan": 1},
								"configurator": function(cell){
									cell.targetColumnName = "employees_name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "성명";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "start_date";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "시작일";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "end_date";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "종료일";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4, "rowSpan": 1, "colSpan": 2},
								"configurator": function(cell){
									cell.text = "담당 기간";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "department";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("ipb9");
										inputBox_3.bind("value").toDataColumn("department");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "employees_number";
									cell.control = (function(){
										var maskEditor_1 = new cpr.controls.MaskEditor("mse1");
										maskEditor_1.mask = "000000000";
										maskEditor_1.bind("value").toDataColumn("employees_number");
										return maskEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "employees_name";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("ipb10");
										inputBox_4.bind("value").toDataColumn("employees_name");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "start_date";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("dti1");
										dateInput_1.format = "YYYY-MM-DD";
										dateInput_1.bind("value").toDataColumn("start_date");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "end_date";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("dti2");
										dateInput_2.format = "YYYY-MM-DD";
										dateInput_2.bind("value").toDataColumn("end_date");
										return dateInput_2;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"colIndex": 0,
					"rowIndex": 1,
					"colSpan": 2,
					"rowSpan": 1
				});
				var button_1 = new cpr.controls.Button();
				button_1.value = "+";
				button_1.style.css({
					"background-color" : "#eaf0ea",
					"border-bottom-color" : "#c2c2c2",
					"border-left-color" : "#c2c2c2",
					"border-top-color" : "#c2c2c2",
					"border-right-color" : "#c2c2c2",
					"background-image" : "none"
				});
				if(typeof onButtonClick == "function") {
					button_1.addEventListener("click", onButtonClick);
				}
				container.addChild(button_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_7);
			container.addChild(group_7, {
				"top": "463px",
				"left": "0px",
				"width": "704px",
				"height": "242px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "등록";
			button_2.style.css({
				"background-color" : "#DAF2DA",
				"border-right-style" : "none",
				"border-radius" : "10px",
				"border-left-style" : "none",
				"border-bottom-style" : "none",
				"background-image" : "none",
				"border-top-style" : "none"
			});
			if(typeof onButtonClick3 == "function") {
				button_2.addEventListener("click", onButtonClick3);
			}
			if(typeof onButtonClick2 == "function") {
				button_2.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_2, {
				"top": "723px",
				"left": "624px",
				"width": "80px",
				"height": "25px"
			});
		}
	});
	app.title = "addSW";
	cpr.core.Platform.INSTANCE.register(app);
})();
