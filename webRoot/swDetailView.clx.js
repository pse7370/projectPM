/*
 * App URI: swDetailView
 * Source Location: swDetailView.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("swDetailView", {
		onPrepare: function(loader){
			loader.addCSS("theme/css/addProduct_style.css");
			loader.addCSS("theme/css/main.css");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * swDetailView.js
			 * Created at 2022. 5. 29. 오후 11:55:56.
			 *
			 * @author PSE
			 ************************************************/
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				var product_id = app.getRootAppInstance().getAppProperty("product_id"); // 부모화면 데이터 셋
				console.log("product_id : " + product_id);
				
				var dataProduct_id = app.lookup("product_id");
				dataProduct_id.setValue("product_id", Number(product_id));
				console.log(dataProduct_id.getValue("product_id"));
				
				app.lookup("getSWcontent").send();
				console.log("getSWcontent 서브미션 실행");
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onGetSWcontentSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var getSWcontent = e.control;
				
				var product = app.lookup("product");
				
			
				app.lookup("productImage").src = "/static/SWimage/" + product.getValue("save_image_name");
				app.lookup("productName").redraw();
				app.lookup("productVersion").redraw();
				app.lookup("simultaneous").redraw();
				app.lookup("explanation").redraw();
				app.lookup("grid_developer").redraw();
				
				
				var dbDecimalNum = app.lookup("product_sw").getValue("available_db");
				var osDecimalNum = app.lookup("product_sw").getValue("available_os");
				
				/*
				var dbBinaryNum = dbDecimalNum.toString(2);
				var osBinaryNum = osDecimalNum.toString(2);
				*/
				
				var availableDB = app.lookup("availableDB");
				
				var db = ""
				
				// 1 : Oracle,  10 : MySQL,  100 : MS-SQL,  1000 : MariaDB
				switch(dbDecimalNum){
					case 1 :
						db = "Oracle"
						break;
					case 2 :
						db = "MySQL"
						break;
					case 3 :
						db = "Oracle / MySQL"
						break;				
					case 4 :
						db = "MS-SQL"
						break;
					case 5 :
						db = "Oracle / MS-SQL"
						break;
					case 6 :
						db = "MySQL / MS-SQL"
						break;
					case 7 :
						db = "Oracle / MySQL / MS-SQL"
						break;
					case 8 :
						db = "MariaDB"
						break;
					case 9 :
						db = "Oracle / MariaDB"
						break;
					case 10 :
						db = "MySQL / MariaDB"
						break;
					case 11 :
						db = "Oracle / MySQL / MariaDB"
						break;
					case 12 :
						db = "MS-SQL / MariaDB"
						break;
					case 13 :
						db = "Oracle / MS-SQL / MariaDB"
						break;
					case 14 :
						db = "MySQL / MS-SQL / MariaDB"
						break;
					case 15 :
						db = "Oracle / MySQL / MS-SQL / MariaDB"
						break;																
				}
				
				availableDB.value = db;
				
				
				var availableOS = app.lookup("availableOS");
				
				var os = ""
				
				// 1 : Window,  10 : Linux,  100 : Unix,  1000 : Mac
				switch(osDecimalNum){
					case 1 :
						os = "Window"
						break;
					case 2 :
						os = "Linux"
						break;
					case 3 :
						os = "Window / Linux"
						break;				
					case 4 :
						os = "Unix"
						break;
					case 5 :
						os = "Window / Unix"
						break;
					case 6 :
						os = "Linux / Unix"
						break;
					case 7 :
						os = "Window / Linux / Unix"
						break;
					case 8 :
						os = "Mac"
						break;
					case 9 :
						os = "Window / Mac"
						break;
					case 10 :
						os = "Linux / Mac"
						break;
					case 11 :
						os = "Window / Linux / Mac"
						break;
					case 12 :
						os = "Unix / Mac"
						break;
					case 13 :
						os = "Window / Unix / Mac"
						break;
					case 14 :
						os = "Linux / Unix / Mac"
						break;
					case 15 :
						os = "Window / Linux / Unix / Mac"
						break;																
				}
				
				availableOS.value = os;
				
				
			}
			
			/*
			 * "삭제" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var product_id = app.lookup("product_id").getValue("product_id");
				
				var confirmText = "제품 삭제시 등록한 커스터마이징 이력과 산출물들이 같이 삭제 됩니다.\n삭제하시겠습니까?";
				if(confirm(confirmText)){
					app.lookup("deleteSW").action = "/productMangement/deleteSW?" + product_id;
					app.lookup("deleteSW").send();
					console.log("deleteSW 서브미션 실행");
				}
				
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onDeleteSWSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var deleteSW = e.control;
				
				alert("제품을 삭제했습니다.");
				//window.location.reload();
				app.getRootAppInstance().lookup("getSideMenu").send();
				app.close();
				
				
				var resultCode = app.lookup("result").getValue("resultCode");
				console.log(resultCode);
				
			}
			
			
			/*
			 * "수정" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var embeddedApp = app.getHost();
				
				cpr.core.App.load("modifySW", function(loadedApp){
					if(loadedApp){
						embeddedApp.initValue = {
							"product_id" : app.lookup("product_id").getValue("product_id")
						}
			    		embeddedApp.app = loadedApp;	    		
			  		}
				});
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("developerList");
			dataSet_1.parseData({
				"columns" : [
					{"name": "department"},
					{"name": "employees_number"},
					{"name": "employees_name"},
					{"name": "start_date"},
					{"name": "end_date"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("product");
			dataMap_1.parseData({
				"columns" : [
					{"name": "product_type"},
					{"name": "product_name"},
					{"name": "product_version"},
					{"name": "save_image_name"},
					{"name": "save_path"},
					{"name": "explanation"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("product_sw");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "simultaneous",
						"dataType": "number"
					},
					{
						"name": "available_db",
						"dataType": "number"
					},
					{
						"name": "available_os",
						"dataType": "number"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("product_id");
			dataMap_3.parseData({
				"columns" : [{
					"name": "product_id",
					"dataType": "number"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("result");
			dataMap_4.parseData({
				"columns" : [{
					"name": "resultCode",
					"dataType": "number"
				}]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("getSWcontent");
			submission_1.action = "/productMangement/SWcontent";
			submission_1.addRequestData(dataMap_3);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataSet_1, false);
			if(typeof onGetSWcontentSubmitDone == "function") {
				submission_1.addEventListener("submit-done", onGetSWcontentSubmitDone);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("deleteSW");
			submission_2.action = "/productMangement/deleteSW";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_4, false);
			if(typeof onDeleteSWSubmitDone == "function") {
				submission_2.addEventListener("submit-done", onDeleteSWSubmitDone);
			}
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 748px) and (max-width: 1023px)", "content_view");
			app.supportMedia("all and (min-width: 500px) and (max-width: 747px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
			})(group_1);
			container.addChild(group_1, {
				"top": "669px",
				"left": "510px",
				"width": "201px",
				"height": "49px"
			});
			
			var image_1 = new cpr.controls.Image("productImage");
			image_1.alt = "\"제품 이미지\"";
			image_1.areaCoordinate = "image-size";
			(function(image_1){
			})(image_1);
			container.addChild(image_1, {
				"top": "20px",
				"left": "20px",
				"width": "180px",
				"height": "180px"
			});
			
			var group_2 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["180px", "1fr"]);
			formLayout_1.setRows(["1fr", "1fr", "1fr", "1fr", "1fr"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "제품명";
				output_1.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#b4b4b4",
					"border-right-width" : "1px",
					"vertical-align" : "middle",
					"border-left-color" : "#b4b4b4",
					"border-right-color" : "#b4b4b4",
					"border-left-width" : "1px",
					"border-top-style" : "solid",
					"background-color" : "#eaf0ea",
					"border-left-style" : "solid",
					"border-bottom-width" : "1px",
					"border-top-color" : "#b4b4b4",
					"border-bottom-style" : "solid",
					"text-align" : "center"
				});
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output();
				output_2.value = "버전";
				output_2.style.css({
					"border-right-style" : "solid",
					"background-color" : "#eaf0ea",
					"border-right-width" : "1px",
					"border-left-style" : "solid",
					"vertical-align" : "middle",
					"border-left-color" : "#b4b4b4",
					"border-right-color" : "#b4b4b4",
					"border-left-width" : "1px",
					"text-align" : "center"
				});
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "동시접속 단말기 수";
				output_3.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#b4b4b4",
					"border-right-width" : "1px",
					"vertical-align" : "middle",
					"border-left-color" : "#b4b4b4",
					"border-right-color" : "#b4b4b4",
					"border-left-width" : "1px",
					"border-top-style" : "solid",
					"background-color" : "#eaf0ea",
					"border-left-style" : "solid",
					"border-bottom-width" : "1px",
					"border-top-color" : "#b4b4b4",
					"border-bottom-style" : "solid",
					"text-align" : "center"
				});
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "지원 OS";
				output_4.style.css({
					"border-right-style" : "solid",
					"background-color" : "#eaf0ea",
					"border-right-width" : "1px",
					"border-left-style" : "solid",
					"vertical-align" : "middle",
					"border-left-color" : "#b4b4b4",
					"border-right-color" : "#b4b4b4",
					"border-left-width" : "1px",
					"text-align" : "center"
				});
				container.addChild(output_4, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var output_5 = new cpr.controls.Output();
				output_5.value = "사용가능 DB";
				output_5.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#b4b4b4",
					"border-right-width" : "1px",
					"vertical-align" : "middle",
					"border-left-color" : "#b4b4b4",
					"border-right-color" : "#b4b4b4",
					"border-left-width" : "1px",
					"border-top-style" : "solid",
					"background-color" : "#eaf0ea",
					"border-left-style" : "solid",
					"border-bottom-width" : "1px",
					"border-top-color" : "#b4b4b4",
					"border-bottom-style" : "solid",
					"text-align" : "center"
				});
				container.addChild(output_5, {
					"colIndex": 0,
					"rowIndex": 4
				});
				var output_6 = new cpr.controls.Output("productVersion");
				output_6.style.css({
					"border-right-style" : "solid",
					"border-right-width" : "1px",
					"padding-left" : "10px",
					"border-right-color" : "#b4b4b4"
				});
				output_6.bind("value").toDataMap(app.lookup("product"), "product_version");
				container.addChild(output_6, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var output_7 = new cpr.controls.Output("simultaneous");
				output_7.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#b4b4b4",
					"border-right-width" : "1px",
					"padding-left" : "10px",
					"border-bottom-width" : "1px",
					"border-top-color" : "#b4b4b4",
					"border-right-color" : "#b4b4b4",
					"border-bottom-style" : "solid",
					"border-top-style" : "solid"
				});
				output_7.bind("value").toDataMap(app.lookup("product_sw"), "simultaneous");
				container.addChild(output_7, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var output_8 = new cpr.controls.Output("availableOS");
				output_8.style.css({
					"border-right-style" : "solid",
					"border-right-width" : "1px",
					"padding-left" : "10px",
					"border-right-color" : "#b4b4b4"
				});
				container.addChild(output_8, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var output_9 = new cpr.controls.Output("availableDB");
				output_9.value = "";
				output_9.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#b4b4b4",
					"border-right-width" : "1px",
					"padding-left" : "10px",
					"border-bottom-width" : "1px",
					"border-top-color" : "#b4b4b4",
					"border-right-color" : "#b4b4b4",
					"border-bottom-style" : "solid",
					"border-top-style" : "solid"
				});
				container.addChild(output_9, {
					"colIndex": 1,
					"rowIndex": 4,
					"colSpan": 1,
					"rowSpan": 1
				});
				var output_10 = new cpr.controls.Output("productName");
				output_10.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#b4b4b4",
					"border-right-width" : "1px",
					"padding-left" : "10px",
					"border-bottom-width" : "1px",
					"border-top-color" : "#b4b4b4",
					"border-right-color" : "#b4b4b4",
					"border-bottom-style" : "solid",
					"border-top-style" : "solid"
				});
				output_10.bind("value").toDataMap(app.lookup("product"), "product_name");
				container.addChild(output_10, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "20px",
				"left": "219px",
				"width": "492px",
				"height": "175px"
			});
			
			var group_3 = new cpr.controls.Container();
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			group_3.setLayout(verticalLayout_1);
			(function(container){
				var output_11 = new cpr.controls.Output();
				output_11.value = "설명";
				output_11.style.css({
					"padding-left" : "10px"
				});
				container.addChild(output_11, {
					"width": "100px",
					"height": "25px"
				});
				var textArea_1 = new cpr.controls.TextArea("explanation");
				textArea_1.readOnly = true;
				textArea_1.style.css({
					"padding-top" : "5px",
					"padding-left" : "10px",
					"padding-bottom" : "5px"
				});
				textArea_1.bind("value").toDataMap(app.lookup("product"), "explanation");
				container.addChild(textArea_1, {
					"autoSize": "none",
					"width": "100px",
					"height": "182px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "223px",
				"left": "20px",
				"width": "691px",
				"height": "221px"
			});
			
			var group_4 = new cpr.controls.Container();
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_4.setLayout(verticalLayout_2);
			(function(container){
				var output_12 = new cpr.controls.Output();
				output_12.value = "담당 개발자";
				output_12.style.css({
					"padding-left" : "10px"
				});
				container.addChild(output_12, {
					"width": "100px",
					"height": "25px"
				});
				var grid_1 = new cpr.controls.Grid("grid_developer");
				grid_1.readOnly = true;
				grid_1.init({
					"dataSet": app.lookup("developerList"),
					"columns": [
						{"width": "36px"},
						{"width": "108px"},
						{"width": "100px"},
						{"width": "104px"},
						{"width": "101px"},
						{"width": "95px"}
					],
					"header": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "번호";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.targetColumnName = "department";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "부서명";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "employees_number";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "사원 번호";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "employees_name";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "성명";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "start_date";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "시작일";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "end_date";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "종료일";
									cell.style.css({
										"background-color" : "#eaf0ea"
									});
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "department";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "employees_number";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "employees_name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "start_date";
									cell.control = (function(){
										var maskEditor_1 = new cpr.controls.MaskEditor("mse1");
										maskEditor_1.readOnly = true;
										maskEditor_1.mask = "0000-00-00";
										maskEditor_1.style.css({
											"text-align" : "center"
										});
										maskEditor_1.bind("value").toDataColumn("start_date");
										return maskEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "end_date";
									cell.control = (function(){
										var maskEditor_2 = new cpr.controls.MaskEditor("mse2");
										maskEditor_2.readOnly = true;
										maskEditor_2.mask = "0000-00-00";
										maskEditor_2.style.css({
											"text-align" : "center"
										});
										maskEditor_2.bind("value").toDataColumn("end_date");
										return maskEditor_2;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"width": "400px",
					"height": "178px"
				});
			})(group_4);
			container.addChild(group_4, {
				"top": "454px",
				"left": "20px",
				"width": "691px",
				"height": "215px"
			});
			
			var button_1 = new cpr.controls.Button();
			button_1.value = "수정";
			button_1.style.css({
				"background-color" : "#DAF2DA",
				"border-right-style" : "none",
				"border-radius" : "10px",
				"border-left-style" : "none",
				"border-bottom-style" : "none",
				"background-image" : "none",
				"border-top-style" : "none"
			});
			if(typeof onButtonClick2 == "function") {
				button_1.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_1, {
				"top": "681px",
				"left": "534px",
				"width": "80px",
				"height": "25px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "삭제";
			button_2.style.css({
				"background-color" : "#DAF2DA",
				"border-right-style" : "none",
				"border-radius" : "10px",
				"border-left-style" : "none",
				"border-bottom-style" : "none",
				"background-image" : "none",
				"border-top-style" : "none"
			});
			if(typeof onButtonClick == "function") {
				button_2.addEventListener("click", onButtonClick);
			}
			container.addChild(button_2, {
				"top": "681px",
				"left": "631px",
				"width": "80px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "swDetailView";
	cpr.core.Platform.INSTANCE.register(app);
})();
